html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
  }

  *,
  *::after,
  *::before {
    box-sizing: inherit;
  }
  body{
    max-width: 100vw;
  }
  h1{
    text-align: center;
  }
  a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 2rem;
    text-align: center;
    text-decoration: none;
  }

  p {
    margin: 0;
  }

  h2 {
    text-align: center;
  }

  img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
  }

  .menu {
    max-width: 70vw;
    margin: 0 auto;
    margin-bottom: 15vh;
    font-size: 125%;
  }

  .menu li {
    margin-bottom: 1rem;
  }

  .container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
  }

  .item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
  }
  .sub-item{
    padding: 1rem;
    border: medium solid #ccc;
    background-color: #ddd;
  }
  .container-grid-implicits{
    display: flex;
    justify-content: center;
  }
  .grid-explicit{
    display: grid;
    /* Grid de 3x3 */
    grid-template-columns: 50% 100px 1fr;
    grid-template-rows: 2rem 20vh 30%;
    /* Grid de 5x4 */
    grid-template-columns: repeat(5, 20%);
    grid-template-rows: repeat(4, auto);
    /* Grid de 4x5 */
    grid-template-columns: auto repeat(2, 30%) auto;
    grid-template-rows: repeat(5, auto);
    /* gaps para filas y columnas */
    row-gap: 1rem;
    column-gap: 1rem;
    /* Shorthand: filas columnas*/
    gap: 0.3rem 0.5rem;
  }
  /* Para posicionar un elemento */
  .grid-explicit .item:nth-child(10){
      color: red;
      grid-column: 3 / 5;
      grid-row: 2 / 3;
      /* Shorthand: grid-row/grid-column */
      grid-area: 2/3/3/5;
    }
    .grid-explicit .item:nth-child(12){
        color: cyan;
        grid-row: span 2;
        grid-column: span 3;
    }
    .grid-explicit .item:nth-child(15){
        color: rebeccapurple;
        grid-row:1 / span 2 ;
        grid-column: 1 /span 2;
    }
    /* Posicionamiento con nombres de grid lines */
    .grid-line-names{
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(3, 1fr);
      grid-template-columns: [linea-c1]1fr [linea-c2]1fr [linea-c3]1fr [linea-c4];
      grid-template-rows: [linea-r1]1fr [linea-r2]1fr [linea-r3]1fr [linea-r4];
      grid-template-rows: [linea-r1]auto [linea-r2]auto [linea-r3]auto [linea-r4];
    }
    .grid-line-names .item:nth-child(3){
      color: cyan;
      grid-row: linea-r3 / linea-r4;
      grid-column: linea-c1 / linea-c4 ;
    }
    /* posicionamiento con grid areas */
    .grid-areas{
      color: black;
      display: grid;
      grid-template-columns: 1fr 200px;
      grid-template-rows:  100px repeat(2, 1fr) 60px;
      grid-template-areas:
        "header header"
        "content sidebar"
        "content ."
        "footer footer";
    }
    .header{
      grid-area: header;

      background-color: aquamarine;
    }
    .content{
      grid-area: content;

      background-color: #C74B50;
    }
    .sidebar{
      grid-area: sidebar;

      background-color: #4b2e7c;
    }
    .footer{
      grid-area: footer;

      background-color: #06283D;
    }

    /* Grid implicita e Inline-grid */
    .grid-implicit{
      width: 45%;
      display: inline-grid;
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(4, 85px);
    }
    .grid-flow{
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      grid-template-rows: repeat(3, 125px);
      /* la siguiente propiedad es para determinar como se ordenan los items */
      /* Por defecto es filas */
      grid-auto-flow: row;
      /* La siguiente propiedad nos sirve para establecer un tama침o a los items fuera de 
      la grid implicita, por defecto su valor es auto */
      grid-auto-rows: 50px;
      /* cambiando a columnas */
      grid-auto-flow:column;
      grid-auto-columns: 50px;
    }
    /* Grid Dense */
    .grid-flow-dense{
      /* 5c X 4r */
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      grid-template-rows: repeat(4, 150px);
      /* esta propiedad hace que se aproveche el espacio que deja un grid area */
      grid-auto-flow: row dense;
      grid-auto-flow: column dense;
      color: black;
      height: auto;
    }
    /* .grid-flow-dense .item:nth-child(9){
      color: cyan;
      grid-row: span 3;
      grid-column: span 3;
    } */

    /* Lo mismo ocurre cuando los items estan ordenados en columnas */
    .grid-flow-dense .item:nth-child(11){
      color: cyan;
      grid-row: span 3;
      grid-column: span 3;
    }
    /* Celdas en capas (superposici칩n) */
    .grid-layers{
      display: grid;

      grid-template-columns: repeat(4, 1fr);
      grid-template-rows: repeat(4, 1fr);
      color: black  ;
    }
    .grid-layers .item:nth-child(1){
      background-color: #B6E388;
      grid-row: 1/3;
      grid-column: 1/3;
    }
    .grid-layers .item:nth-child(2){
      background-color: #C689C6;
      grid-row: 1/3;
      grid-column: 3/5;
    }
    .grid-layers .item:nth-child(3){
      background-color: #E3C770;
      grid-row: 3/5;
      grid-column: 1/3;
    }
    .grid-layers .item:nth-child(4){
      background-color: #54BAB9;
      grid-row: 3/5;
      grid-column: 3/5;
    }
    .grid-layers .item:nth-child(5){
      background-color: #00ffab6e;
      border-color:black ;
      grid-row: 2/4;
      grid-column: 2/4;
    }
    /* Orden y alineacion de grid items */
    .grid-order{
      display: grid;
      grid-template-columns: repeat(3,1fr);
      grid-template-rows: repeat(2,1fr);
    }
    .grid-order .item:nth-child(1) {
      order: 1;
    }
    .grid-order .item:nth-child(2) {
      order: 2;
    }
    .grid-order .item:nth-child(5) {
      order: -1;
    }
    
    .grid-align{
      display: grid;
      grid-template-columns: repeat(3,200px);
      grid-template-rows: repeat(2,200px);
      /* para alinear en el eje X, con el flujo por defecto */
      justify-items: start;
      justify-items: end;
      justify-items: center;
      /* para alinear en el eje Y, con el flujo por defecto */
      align-items: start;
      align-items: end;
      align-items: center;
    }
    .grid-align .item:nth-child(4){
      /* la propiedad quiere decir que el mismo se alineara  */
      justify-self:start;
      align-self: end;
    }
    /* Alineacion de grid Tracks */
    .grid-align-tracks{
      display: grid;
      grid-template-columns: repeat(3,200px);
      grid-template-rows: repeat(2,200px);
      justify-content: start;
      justify-content: end;
      justify-content: space-between;
      justify-content: space-around;
      justify-content: space-evenly;
      justify-content: center;
      align-content: start;
      align-content: end;
      align-content: center;
      align-content: space-evenly;

    }
    .grid-min-max{
      display: grid;
      /* Grid 4c X ? */
      grid-template-columns: repeat(4, 1fr);
      grid-template-columns: repeat(4, minmax(100px, 200px));
      grid-template-columns: repeat(4, minmax(min-content, 200px));
      grid-template-columns: repeat(4, minmax(100px, min-content));
      grid-template-columns: repeat(4, minmax(100px, max-content));
      grid-template-columns: repeat(4, minmax(max-content, 200px));
      grid-template-columns: repeat(4, minmax(min-content, max-content));

      /* aplica lo mismo para las filas */
    }
    /* Patrones Repititivos */
    .grid-repeat{
      display: grid;
      grid-template-columns: repeat(4,1fr);

      /* esto me generara columnas fuera del contenedor */
      grid-template-columns: repeat(2,20% 30% 50%);

      /* para que eso no ocurra, solo de debe repetir una vez */
      grid-template-columns: repeat(1,20% 30% 50%);

      /* esto repetira el tama침o dos veces, o sea, fila1=100 fila2=150 fila3=100... */
      grid-template-rows: repeat(2, 100px 150px);

      grid-auto-rows: 60px;
      height: auto;
    }
    /* grid-dinamicas */
    .grid-dynamics{
      display: grid;

      grid-template-columns: repeat(4,100px);
      /* auto-fill rellena la grid con tracks generados dinamicamente */
      grid-template-columns: repeat(auto-fill,100px);
      /* auto-fit ajusta la grid con los tracks existentes*/
      grid-template-columns: repeat(auto-fit, 100px);
      grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    }
    .grid-responsive{
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }
    .grid-nested{
      display: grid;
      /* 3c X ? */
      grid-template-columns: repeat(3, 1fr);
    }

    .grid{
      display: grid;
      grid-template-columns: repeat(3,1fr);
      grid-template-rows: repeat(4,1fr);
    }
    .subgrid{
      /*Para que esta caracteriztica funcione es necesario hacer los siguiente
      1) Definir explicitamente el tama침o que ocupara el elemento contenedor de la subgrid, es decir definir sus propiedades grid-column y grid-row
      2) Aplicar display grid al elemento que aplicara subgrid
      3) Aplicar el valor de subgrid a las columnas, a las filas o ambas depende de como se requiera 
       */
      grid-column: span 3;
      grid-row: span 2;
      display: grid;
      grid-template-columns: subgrid;
      grid-template-rows: subgrid;
    }
    /* BOTON VOLVER */
.cta {
  position: fixed;
  margin: auto;
  padding: 12px 18px;
  transition: all 0.2s ease;
  border: none;
  background: none;
  top: 50%;
  right: 1%;
  text-decoration: none;
}

.cta:before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  border-radius: 50px;
  background: #ffea47;
  width: 45px;
  height: 45px;
  transition: all 0.3s ease;
}

.cta span {
  position: relative;
  font-family: "Ubuntu", sans-serif;
  font-size: 18px;
  font-weight: 700;
  letter-spacing: 0.05em;
  color: black;
}

.cta svg {
  position: relative;
  top: 0;
  margin-left: 10px;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke: black;
  stroke-width: 2;
  transform: translateX(-5px);
  transition: all 0.3s ease;
}
.cta:hover{
  background: none;
  text-decoration: none;
}
.cta:hover:before {
  width: 100%;
  background: #ffea47;
}

.cta:hover svg {
  transform: translateX(0);
}

.cta:active {
  transform: scale(0.95);
}